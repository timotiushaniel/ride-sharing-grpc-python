syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.ridesharing";
option java_outer_classname = "RideSharingProto";
option objc_class_prefix = "RTG";

service RideShare {
  rpc GetUserLocation(Point) returns (User) {}

  // A server-to-client streaming RPC.
  //
  // Obtains the Features available within the given Rectangle.  Results are
  // streamed rather than returned at once (e.g. in a response message with a
  // repeated field), as the rectangle may cover a large area and contain a
  // huge number of features.
  rpc ListDriver(Rectangle) returns (stream Driver) {}

  rpc ChooseDriver(stream DriverChosen) returns (stream DriverChosen) {}

  rpc GiveRating(stream DriverChosen) returns (stream DriverChosen) {}
}

// Points are represented as latitude-longitude pairs in the E7 representation
// (degrees multiplied by 10**7 and rounded to the nearest integer).
// Latitudes should be in the range +/- 90 degrees and longitude should be in
// the range +/- 180 degrees (inclusive).
message Point {
  int32 latitude = 1;
  int32 longitude = 2;
}

// A latitude-longitude rectangle, represented as two diagonally opposite
// points "lo" and "hi".
message Rectangle {
  // One corner of the rectangle.
  Point lo = 1;

  // The other corner of the rectangle.
  Point hi = 2;
}

// A feature names something at a given point.
//
// If a feature could not be named, the name is empty.
message Driver {
  //Driver id
  int32 driver_id = 1;

  //Driver name
  string driver_name = 2;

  //Car
  string car = 3;

  //Police Number
  string police_number = 4;

  float rating = 5;

  bool availability = 6;

  // The point where the feature is detected.
  Point location = 7;

  // The name of the feature.
  string location_name = 8;

  float distance = 9;
}

message User {
  int32 user_id = 1;
  string username = 2;
  Point location = 3;
  string location_name = 4;
}

// A RouteNote is a message sent while at a given point.
message DriverChosen {
  // The message to be sent.
  string message = 1;
}

message RatingGiven {
  string message = 1;
}